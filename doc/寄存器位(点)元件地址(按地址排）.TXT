X0-377； Y0-377； M0-1535；M1536-M3071; M8000-8255；S0-1023；T0-255； C0-255； D0~D999；D1000~D7999；D8000~D8255
二、寄存器位(点)元件地址 ppp = 0-FFF，其分布如下：

    寄存器名称   =  位地址 + 偏移量 = 实际地址ppp	物理地址
  S0-1023        =  (0-3FF)         =   0-3FF 		PLC_R_START_ADD +（0x00~0x7F)常开、常闭、输出 1bit地址
  X0-377(八进制) =  (0-FF)   + 400  =  400-4FF		PLC_R_START_ADD +（0x80~0x9F)常开、常闭 1bit地址
  Y0-377(八进制) =  (0-FF)   + 500  =  500-5FF		PLC_R_START_ADD +（0xA0~0xBF)常开、常闭、输出 1bit地址
  T0-511(位）    =  (0-1FF)  + 600  =  600-7FF  	PLC_R_START_ADD +（0xC0~0xFF)常开、常闭、输出 1bit地址
  											T0-T199 共200点100ms型，
  											T200-T245 共46点10ms型，
  											T246-T249 共4点1ms累计型，
  											T250-T255 共6点100ms累计型
  M0-1535        =  (0-5FF)  + 800  =  800-DFF 		PLC_R_START_ADD +（0x100~0x1BF)常开、常闭、输出 1bit地址
  C0-255(位）    =  (0-FF)   + E00  =  E00-EFF 		PLC_R_START_ADD +（0x1C0~0x1DF)常开、常闭、输出 1bit地址	
  											C0-C199(16位)，C200-C255(32位)
  M8000-8255     =  (0-FF)   + F00  =  F00-FFF 		PLC_R_START_ADD +（0x1E0~0x1FF)常开、常闭、输出 1bit地址
 							??
  T0-T255						PLC_R_START_ADD + (0x240~0x25F)复位点1bit地址？累加功能没做？？？？
 							??
  C0~C255						PLC_R_START_ADD + (0x280~0x29F)复位点1bit地址?C200(32位）的没做？？
  Y0-377(八进制) =  (0-FF)   + 500  =  500-5FF		PLC_R_START_ADD +（0x2A0~0x2BF)输出脉冲点 1bit地址；PLC_PL_BIT_ON												
  T0-T255						PLC_R_START_ADD + (0x2C0~0x2DF)启动点1bit地址?累加功能没做？？？？
 							??
  M0-1535        =  (0-5FF)  + 800  =  800-DFF 		PLC_R_START_ADD +（0x300~0x3BF)输出脉冲点 1bit地址；PLC_PL_BIT_ON 
  C0~C255						PLC_R_START_ADD + (0x3C0~0x3DF)启动点1bit地址?C200(32位）的没做？？
  							??
  S0-1023						PLC_R_START_ADD + 0x0400 + (0x00~0x7F)第二次脉冲;PLC_O2_BIT_TEST	
  X0-377						PLC_R_START_ADD + 0x0400 + (0x80~0x9F)第二次脉冲;PLC_O2_BIT_TEST
  Y0-377						PLC_R_START_ADD + 0x0400 + (0xA0~0xBF)第二次脉冲;PLC_O2_BIT_TEST
  T0-511						PLC_R_START_ADD + 0x0400 + (0xC0~0xFF)第二次脉冲;PLC_O2_BIT_TEST
  M0-1535						PLC_R_START_ADD + 0x0400 + (0x100~0x1BF)第二次脉冲;PLC_O2_BIT_TEST
  C0-255						PLC_R_START_ADD + 0x0400 + (0x1C0~0x1DF)第二次脉冲;PLC_O2_BIT_TEST
  M8000-8255     					PLC_R_START_ADD + 0x0400 + (0x1E0~0x1FF)第二次脉冲;PLC_O2_BIT_TEST  							  
  S0-1023						PLC_R_START_ADD + 0x0600 + (0x00~0x7F)第一次脉冲;PLC_O_BIT_TEST	
  X0-377						PLC_R_START_ADD + 0x0600 + (0x80~0x9F)第一次脉冲;PLC_O_BIT_TEST	
  Y0-377						PLC_R_START_ADD + 0x0600 + (0xA0~0xBF)第一次脉冲;PLC_O_BIT_TEST	
  T0-511						PLC_R_START_ADD + 0x0600 + (0xC0~0xFF)第一次脉冲;PLC_O_BIT_TEST	
  M0-1535						PLC_R_START_ADD + 0x0600 + (0x100~0x1BF)第一次脉冲;PLC_O_BIT_TEST	
  C0-255						PLC_R_START_ADD + 0x0600 + (0x1C0~0x1DF)第一次脉冲;PLC_O_BIT_TEST	 							
  M8000-8255     					PLC_R_START_ADD + 0x0600 + (0x1E0~0x1FF)第一次脉冲;PLC_O_BIT_TEST	
  T0~T255（16位数据存储）				PLC_R_START_ADD +（0x800~0x9FF)数据16bit地址
  C0~C199（16位数据存储）				PLC_R_START_ADD +（0xA00~0xB8F)数据16bit地址
  C200~C255（32位数据存储）				PLC_R_START_ADD +（0xC00~0xCDF)数据32bit地址  							
  D8000~D8255						PLC_R_START_ADD +（0xE00~0xFFF)数据16bit地址
  D0~D999						PLC_R_START_ADD +（0x1000~0x17CF)数据16bit地址
  D1000~D7999						PLC_R_START_ADD +（0x17D0~0x4E7F)数据16bit地址
							PLC_R_START_ADD + (0x4E80~ 0x567F)功能指令脉冲PLC_FNC_P_BIT_TEST(x);PLC_FNC_P_BIT_OFF(x);PLC_FNC_P_BIT_ON(x)
	 						??
	 						PLC_R_START_ADD + (0x5700~	）跳转指令存储指针
	 						PLC_R_START_ADD + (0x5800~	）PLC_P_TEST(x)
  M1536-M3071    =  (600-BFF)+ 200  =  800-DFF 	    ??？PLC_R_START_ADD + 0x5720 + (0x100~0x1BF)常开、常闭、输出 1bit地址????未处理这些点  
  M1536-M3071					    ??？PLC_R_START_ADD + 0x57E0 + (0x100~0x1BF)第二次脉冲;PLC_O2_BIT_TEST
  M1536-M3071					    ??？PLC_R_START_ADD + 0x58A0 + (0x100~0x1BF)第一次脉冲;PLC_O_BIT_TEST
  M1536-M3071        				    ???	PLC_R_START_ADD + 0x5960 + (0x100~0x1BF)输出脉冲点 1bit地址；PLC_PL_BIT_ON 							
							PLC_R_START_ADD + (0x5B90~	)E10 1790配置开始地址
							PLC_R_START_ADD + (0x5D00~	)E10 1400配置开始地址

/***********在线->时钟设置*********/
1.检查RTC是否正常	02 45 30 30 30 31 43 32 30 31 03 44 46，02 30 34 03 36 37
M8015~8019
2.暂停RTC ON（M8015	02 45 37 30 46 30 45 03 36 41，06
3.读年数据D8018		02 45 30 30 30 45 32 34 30 32 03 45 35，02 45 31 30 37 03 45 30
3.写数据02 45 31 30 30 45 31 41 30 45 30 38 30 30 31 38 30 30 31 34 30 30 31 41 30 30 30 33 30 30 45 31 30 37 30 30 30 30 03 38 44
4.开始RTC OFF（M8015	02 45 38 30 46 30 45 03 36 42，06
5.检查RTC是否正常	02 45 30 30 30 31 43 32 30 31 03 44 46，02 30 34 03 36 37
		地址		长度	秒		分		时		日		 月		年		星期日			
02 45 31 30	30 45 31 41	30 45	30 38 30 30	31 38 30 30	31 34 30 30	31 41 30 30	30 33 30 30	45 31 30 37	30 30 30 30	03 38 44
06 
/******************************************/
/*第一次操作软件 通信->在线->PLC读取(波特率不相等）*/
20:54:09 COM1  SERIAL_WRITED 13	   02 45 30 30 30 45 45 38 30 34 03 46 45 				E00读配置0EE8H 04H(04)
				      02 38 35 46 34 37 31 34 44 03 43 41 

20:54:09 COM1  SERIAL_WRITED 21	   02 45 31 30 30 45 45 43 30 34 42 35 35 44 36 44 33 33 03 44 41 	E10写配置0EEC
				      06 
				      
20:54:09 COM1  SERIAL_WRITED 6     02 41 31 03 37 35	
20:54:09 COM1  SERIAL_READED 1     06 	
/*************************************************************/
//02 45 38 32 35 30 45 03 35 43   远程设置运行
//02 45 37 32 35 30 45 03 35 42   远程设置中止
/***********************************************************************/
设备强制中的地址公式:Address=Address%8(求模）
 //02 37 30 32 30 34 03 30 30 //SET X2
//02 38 30 32 30 34 03 30 30 //RST X2
//TO:02 37 30 30 30 35 03 46 46//SET Y0
//02 45 37 30 35 30 30 03 34 35   SET M5


 //02 45 30 30 31 37 39 30 32 38 03 45 33//监控读取节点状态
 02 45 31 30 31 34 34 30 33 30  第2 3 4组GX监控数据，点比较多的时候会出现
                        // 33 30  除以2是点的个数 
                        
//读取PLC存储空间大小 PC  : 02 45 30 30 30 45 43 43 30 32 03 30 35 
//                    PLC : 02 30 38 30 30 03 43 42      


//02	30	30 30 30 30	30 31	03	36 37//READ S0-S7
 报头   读      S字节数		字节数  报尾	和校验
//02	30 30			03	36 33 
 报头	16进制数据S7~S0 	报尾    和校验
 
//02	30	30 30 30 30	30 32	03	36 37//READ S0-S16
 报头   读      S字节数		字节数  报尾	和校验
//02	30 30 30 30		03	43 33 
 报头	16进制数据S7~S0 S16~S8 	报尾    和校验
 
//02 30 30 30 38 30 30 31 03 35 43 //READ X0-X7
02 30 30 03 36 33 

//02 30 30 30 41 30 30 31 03 36 35//READ Y0-Y7   
02 30 30 03 36 33 

//02 30 30 31 30 30 30 31 03 35 35//READ M0-M7
02 30 30 03 36 33 

02 45 30 30 30 30 43 30 30 31 03 44 43//READ M1536~M1543

//02 30 30 38 30 30 30 32 03 35 44 //read T0
02 30 30 30 30 03 43 33 

02 30 30 41 43 38 30 32 03 38 31 //READ C100

//02 30 31 30 30 30 30 34 03 35 38 read d0 d1

//02	31	31 30 30 30	30 34	31 33 31 31	30 30 30 30	03	44 46//WRITE D0 1113  D1 0000
 报头   写	D字节数		字节数  数据低到高	  个    百	报尾	和校验
/********************************************************************************************/
02 45 31 30 31 34 30 30 31 34 30 33 38 31 30 35 30 30 31 34 30 45 31 38 30 45 30 36 30 45 	46 46 30 42	30 30 30 45	30 30 30 30	46 46 30 35	30 30 30 36	03 34 31 	
			14	03     81  05    00    	
02 45 31 30 31 34 30 30 31 30 30 33 38 31 30 33 30 30 31 34 30 45 31 38 30 45 30 36 30 45	30 30 30 45	30 30 30 30	46 46 30 35	03 37 37 	m0 m1535

02 45 31 30 31 34 30 30 31 30 30 33 38 31 30 33 30 30 31 34 30 45 31 38 30 45 30 36 30 45 	46 46 30 42 	30 30 30 45 	30 30 30 36 	03 38 41 	m1536 m3071

02 45 31 30 31 34 30 30 30 45 30 33 38 31 30 32 30 30 31 34 30 45 31 38 30 45 30 36 30 45 	30 30 30 45 	30 30 30 36 	03 39 46 m1536	

02 45 31 30 31 34 30 30 30 45 30 33 38 31 30 32 30 30 31 34 30 45 31 38 30 45 30 36 30 45 	46 46 30 42 	30 30 30 45 	03 44 37 m3071	

02 45 31 30 //0xE10写配置
31 34 30 30 地址0x1400
30 43 长度
             30 33 38 31 30 31 30 30 31 34 30 45 31 38 30 45 30 36 30 45 30 30 30 45 
两个合成一个 03	   81    01    00    14    0e    18    0e    0f    0e    00    0e
03 44 36 结束


02 45 30 30 31 37 39 30 30 37 03 45 30 
	


通信命令有
PLC_UART_BUFFER[1]==0X30	  //0读数据
PLC_UART_BUFFER[1]==0X31	  //1写数据
PLC_UART_BUFFER[1]==0X37	 //7强制ON
PLC_UART_BUFFER[1]==0X38	 //8强制OFF
PLC_UART_BUFFER[1]==0X45	 //强制FNC
	PLC_UART_BUFFER[2]==0x30
		PLC_UART_BUFFER[3]==0x30//E00读配置
		PLC_UART_BUFFER[3]==0x31//E01读程序
	PLC_UART_BUFFER[2]==0x31
		PLC_UART_BUFFER[3]==0x30//E10写配置
		PLC_UART_BUFFER[3]==0x31//E11写程序
	PLC_UART_BUFFER[2]==0x37//E7强制ON
	PLC_UART_BUFFER[2]==0x38//E8强制OFF
	
PLC_UART_BUFFER[1]==0x42	//程序下载完成　　

PLC_UART_BUFFER[1]==0x34

1.30H读
2.31H写
3.37H强制ON
4.38H强制OFF

